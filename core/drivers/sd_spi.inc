;-----------------------------------------------------------------------------------------------------------------------
;Файл распространяется под лицензией GPL-3.0-or-later, https://www.gnu.org/licenses/gpl-3.0.txt
;-----------------------------------------------------------------------------------------------------------------------
;18.01.2021  w5277c@gmail.com			Начало
;-----------------------------------------------------------------------------------------------------------------------

.include	"./core/ram/ram_offset.inc"
.include	"./core/ram/ram_realloc.inc"
.include	"./core/ram/ram_extend.inc"
.include	"./core/ram/ram_reduce.inc"
.include	"./core/wait_2ms.inc"
.include	"./conv/crc7_730.inc"
.include	"./conv/crc_block_x8.inc"
.ifdef LOGGING_PORT
	.include	"./core/log/log_byte.inc"
	.include	"./core/log/log_cr.inc"
	.include	"./core/log/log_strn.inc"
	.include	"./core/log/log_numx8.inc"
	.include	"./core/log/log_numx16.inc"
	.include	"./core/log/log_str_el.inc"

_DRV_SD_LOG_STR_SD_CARD_VERSIONS:
	.db	"Got Ver1.X SD card",0x00,"Got Ver2.00 or later SC SD card",0x00,"Got Ver2.00 or later HC/EC SD card",0x00
_DRV_SD_LOG_STR_CID:
	.db "CID:",0x0d,0x0a,0x00
_DRV_SD_LOG_STR_CID_FIELDS:
	.db "MID:0x",0x00,"OID:",0x00,"PNM:",0x00,"PRV:",0x00,"PSN:",0x00,"MDT:",0x00
_DRV_SD_LOG_STR_R1:
	.db "<R1:",0x00
_DRV_SD_LOG_STR_R3R7:
	.db "<R3/R7:",0x00
_DRV_SD_LOG_STR_BLOCK:
	.db "<BLK:",0x00
_DRV_SD_LOG_STR_OCR:
	.db "OCR:",0x0d,0x0a,0x00

_DRV_SD_LOG_STR_OCR_VOLTAGES:	;начинаем с 15-го бита
	.db "2.7-2.8",0x00,"2.8-2.9",0x00,"2.9-3.0",0x00,"3.0-3.1",0x00,"3.1-3.2",0x00,"3.2-3.3",0x00,"3.3-3.4",0x00,"3.4-3.5",0x00,"3.5-3.6",0x00
_DRV_SD_LOG_STR_OCR_24:
	.db " Switching to 1.8V Accepted (S18A)",0x00
_DRV_SD_LOG_STR_OCR_27:
	.db " Over 2TB support Status (CO2T)",0x00
_DRV_SD_LOG_STR_OCR_29:
	.db " UHS-II Card Status",0x00
_DRV_SD_LOG_STR_OCR_30:
	.db " Card Capacity Status (CCS)",0x00
_DRV_SD_LOG_STR_OCR_31:
	.db " Card power up status bit (busy)",0x00
_DRV_SD_LOG_INIT_DONE:
	.db 0x0d,0x0a,"Init done, R1:",0x00
_DRV_SD_LOG_STR_CSD:
	.db "CSD:",0x0d,0x0a,0x00
_DRV_SD_LOG_STR_CSD_STRUCTURE:
	.db " CSD_STRUCTURE:",0x00
_DRV_SD_LOG_STR_CSD_TAAC:
	.db " TAAC:",0x00
_DRV_SD_LOG_STR_CSD_NSAC:
	.db " NSAC(x100clck):",0x00
_DRV_SD_LOG_STR_CSD_TRAN_SPEED:
	.db " TRAN_SPEED:",0x00
_DRV_SD_LOG_STR_CSD_RATES:
	.db "x100Kbit/s",0x00,"x1Mbit/s",0x00,"x10Mbit/s",0x00,"x100Mbit/s",0x00
_DRV_SD_LOG_STR_CSD_VALUES:
	.db "1.0",0x00,"1.2",0x00,"1.3",0x00,"1.5",0x00,"2.0",0x00,"2.5",0x00,"3.0",0x00,"3.5",0x00,"4.0",0x00,"4.5",0x00,"5.0",0x00,"5.5",0x00,"6.0",0x00,"7.0",0x00,"8.0",0x00




_DRV_SD_LOG_STR_CSD_CCC:
	.db " CCC:",0x00
_DRV_SD_LOG_STR_CSD_READ_BL_LEN:
	.db " READ_BL_LEN:",0x00
_DRV_SD_LOG_STR_CSD_READ_BL_PARTIAL:
	.db " READ_BL_PARTIAL:",0x00
_DRV_SD_LOG_STR_CSD_WRITE_BLK_MISALIGN:
	.db " WRITE_BLK_MISALIGN:",0x00
_DRV_SD_LOG_STR_CSD_READ_BLK_MISALIGN:
	.db " READ_BLK_MISALIGN:",0x00
_DRV_SD_LOG_STR_CSD_DSR_IMP:
	.db " READ_DSR_IMP:",0x00
_DRV_SD_LOG_STR_CSD_C_SIZE:
	.db " C_SIZE:",0x00
_DRV_SD_LOG_STR_CSD_VDD_R_CURR_MIN:
	.db " VDD_R_CURR_MIN:",0x00
_DRV_SD_LOG_STR_CSD_VDD_R_CURR_MAX:
	.db " VDD_R_CURR_MAX:",0x00
_DRV_SD_LOG_STR_CSD_VDD_W_CURR_MIN:
	.db " VDD_W_CURR_MIN:",0x00
_DRV_SD_LOG_STR_CSD_VDD_W_CURR_MAX:
	.db " VDD_W_CURR_MAX:",0x00
_DRV_SD_LOG_STR_CSD_C_SIZE_MULT:
	.db " C_SIZE_MULT:",0x00
_DRV_SD_LOG_STR_CSD_ERASE_BLR_EN:
	.db " ERASE_BLR_EN:",0x00
_DRV_SD_LOG_STR_CSD_SECTOR_SIZE:
	.db " SECTOR_SIZE:",0x00
_DRV_SD_LOG_STR_CSD_WP_GRP_SIZE:
	.db " WP_GRP_SIZE:",0x00
_DRV_SD_LOG_STR_CSD_WP_GRP_ENABLE:
	.db " WP_GRP_ENABLE:",0x00
_DRV_SD_LOG_STR_CSD_R2W_FACTOR:
	.db " R2W_FACTOR:",0x00
_DRV_SD_LOG_STR_CSD_WRITE_BL_LEN:
	.db " WRITE_BL_LEN:",0x00
_DRV_SD_LOG_STR_CSD_WRITE_BL_PARTIAL:
	.db " WRITE_BL_PARTIAL:",0x00
_DRV_SD_LOG_STR_CSD_FILE_FORMAT_GRP:
	.db " FILE_FORMAT_GRP:",0x00
_DRV_SD_LOG_STR_CSD_COPY:
	.db " COPY:",0x00
_DRV_SD_LOG_STR_CSD_PERM_WRITE_PROTECT:
	.db " PERM_WRITE_PROTECT:",0x00
_DRV_SD_LOG_STR_CSD_TMP_WRITE_PROTECT:
	.db " TMP_WRITE_PROTECT:",0x00
_DRV_SD_LOG_STR_CSD_FILE_FORMAT:
	.db " FILE_FORMAT:",0x00
_DRV_SD_LOG_STR_1NS:
	.db "1ns",0x00
_DRV_SD_LOG_STR_10NS:
	.db "10ns",0x00
_DRV_SD_LOG_STR_100NS:
	.db "100ns",0x00
_DRV_SD_LOG_STR_1US:
	.db "1us",0x00
_DRV_SD_LOG_STR_10US:
	.db "10us",0x00
_DRV_SD_LOG_STR_100US:
	.db "100us",0x00
_DRV_SD_LOG_STR_1MS:
	.db "1ms",0x00
_DRV_SD_LOG_STR_10MS:
	.db "10ms",0x00
_DRV_SD_LOG_STR_CLASS:
	.db "class",0x00
_DRV_SD_LOG_STR_BYTES:
	.db "Bytes",0x00
_DRV_SD_LOG_STR_YES:
	.db "yes",0x00
_DRV_SD_LOG_STR_NO:
	.db "no",0x00
_DRV_SD_LOG_STR_MA:
	.db "ma",0x00
_DRV_SD_LOG_STR_FILE_FORMAT_HARDDISK:
	.db "Hard disk-like FS with PT",0x00
_DRV_SD_LOG_STR_FILE_FORMAT_DOSFAT:
	.db "DOS FAT",0x00
_DRV_SD_LOG_STR_FILE_FORMAT_UNIVERSAL:
	.db "Universal",0x00
_DRV_SD_LOG_STR_FILE_FORMAT_OTHERS:
	.db "Others",0x00
_DRV_SD_LOG_STR_RESERVED:
	.db "Reserved",0x00










.endif

	;---OPERATIONS---
	.EQU	DRV_SD_OP_INIT										= 0x00;Инициализация
	.EQU	DRV_SD_OP_GET_OCR									= 0x01;Получить OCR
	.EQU	DRV_SD_OP_GET_CSD									= 0x02;Получить CSD
	.EQU	DRV_SD_OP_GET_CID									= 0x03;Получить CID


;---CONSTANTS--------------------------------------------
	.EQU	_DRV_SD_CMD0										= 0x00;
	.EQU	_DRV_SD_CMD1										= 0x01;
	.EQU	_DRV_SD_CMD2										= 0x02;
	.EQU	_DRV_SD_CMD5										= 0x05;
	.EQU	_DRV_SD_CMD8										= 0x08;
	.EQU	_DRV_SD_CMD9										= 0x09;
	.EQU	_DRV_SD_CMD10										= 0x0a;
	.EQU	_DRV_SD_CMD55										= 0x37;
	.EQU	_DRV_SD_CMD58										= 0x3a;
	.EQU	_DRV_SD_ACMD41										= 0x29;
	;---FLAGS---
	.EQU	DRV_SD_FLAG_VER1									= 0x01;
	.EQU	DRV_SD_FLAG_VER2SC								= 0x02;
	.EQU	DRV_SD_FLAG_VER2HC								= 0x03;


	.EQU	_DRV_SD_RAM_SIZE									= 0x30;32 байта необходимо выделить под буфер

;Драйвер карты памяти (режим SPI)
;--------------------------------------------------------
DRV_SD_INIT:
;--------------------------------------------------------
;Инициализация драйвера
;--------------------------------------------------------
	;Инициализируем порт CLCK
	CBI PORTB,SCK & 0x0f
	SBI DDRB,SCK & 0x0f
	;Инициализируем порт MOSI
	CBI PORTB,MOSI & 0x0f
	SBI DDRB,MOSI & 0x0f
	;Инициализируем порт MISO
	SBI PORTB,MISO & 0x0f
	CBI DDRB,MISO & 0x0f
	;Инициализируем порт SS (чип отключен)
	SBI PORTB,SS & 0x0f
	SBI DDRB,SS & 0x0f

	;Выделяем память
	LDI ACCUM,_DRV_SD_RAM_SIZE
	MCALL C5_RAM_REALLOC

	MCALL C5_READY
;--------------------------------------------------------
;Основной код, коммуникация
;IN: FLAGS - тип операции
;OUT: ACCUM - R1 ответ или
;TEMP_H/L-R2 ответ
;--------------------------------------------------------
	PUSH_Z

	;Получаем адрес выделенной памяти
	MCALL C5_RAM_OFFSET

	CPI FLAGS,DRV_SD_OP_INIT
	BRNE PC+0x04
	MCALL _DRV_SD_OP_INIT
	RJMP _DRV_SD__END
	CPI FLAGS,DRV_SD_OP_GET_CSD
	BRNE PC+0x04
	MCALL _DRV_SD_OP_GET_CSD
	RJMP _DRV_SD__END
	CPI FLAGS,DRV_SD_OP_GET_CID
	BRNE PC+0x04
	MCALL _DRV_SD_OP_GET_CID
	RJMP _DRV_SD__END
	CPI FLAGS,DRV_SD_OP_GET_OCR
	BRNE PC+0x04
	MCALL _DRV_SD_OP_GET_OCR
	RJMP _DRV_SD__END

	;...

	LDI ACCUM,0xff
_DRV_SD__END:
	POP_Z
	RET


;--------------------------------------------------------
_DRV_SD_OP_INIT:
;--------------------------------------------------------
;Инициализация карты
;OUT: ACCUM-R1 ответ, FLAGS - т
;--------------------------------------------------------
	PUSH FLAGS
	PUSH TEMP
	PUSH LOOP_CNTR
	PUSH_Z

	CLR FLAGS

	CBI PORTB,SCK & 0x0f
	SBI DDRB,MOSI & 0x0f
	SBI PORTB,SS & 0x0f

	SBI PORTB,MOSI & 0x0f
	LDI LOOP_CNTR,80
_DRV_SD_OP_INIT__LOOP:
	SBI PORTB,SCK & 0x0f
	NOP
	NOP
	NOP
	CBI PORTB,SCK &0x0f
	DEC LOOP_CNTR
	BRNE _DRV_SD_OP_INIT__LOOP

	CBI PORTB,SS & 0x0f

	LDI TEMP,_DRV_SD_CMD0
	STD Z+0x00,TEMP
	LDI TEMP,0x00
	STD Z+0x01,TEMP
	LDI TEMP,0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x00
	STD Z+0x03,TEMP
	LDI TEMP,0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_CMD
	LDI TEMP_L,0x01
	MCALL _DRV_SD_GET_R1
	SBI PORTB,SS & 0x0f
	CPI ACCUM,0x01
	BREQ PC+0x02
	RJMP _DRV_SD_OP_INIT__END
	CBI PORTB,SS & 0x0f

	LDI TEMP,_DRV_SD_CMD8											;47:40	b01001000
	STD Z+0x00,TEMP
	LDI TEMP,0x00														;39:32	0x00
	STD Z+0x01,TEMP
	LDI TEMP,0x00														;31:24	0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x01														;23:16	19:16=b0001 (2.7-3.6V)
	STD Z+0x03,TEMP
	LDI TEMP,0xAA														;15-08	0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_CMD
	MOV YH,ZH
	MOV YL,ZL
	MCALL _DRV_SD_GET_R3R7
	SBI PORTB,SS & 0x0f
	ANDI ACCUM,0xfe
	CPI ACCUM,0x05
	BRNE PC+0x03
	LDI FLAGS,DRV_SD_FLAG_VER1
	RJMP PC+0x03
	CPI ACCUM,0x00
	BRNE _DRV_SD_OP_INIT__END

_DRV_SD_OP_INIT__WAIT:
	CBI PORTB,SS & 0x0f
	LDI TEMP,_DRV_SD_ACMD41
	STD Z+0x00,TEMP
	LDI TEMP,0x40
	STD Z+0x01,TEMP
	LDI TEMP,0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x00
	STD Z+0x03,TEMP
	LDI TEMP,0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_ACMD
	CPI ACCUM,0x00
	BRNE _DRV_SD_OP_INIT__END
	MCALL _DRV_SD_GET_R1
	MCALL _DRV_SD_GET_BLOCK
	SBI PORTB,SS & 0x0f
	CPI ACCUM,0x00
	BREQ _DRV_SD_OP_INIT_SD_READY
	CPI ACCUM,0x01
	BREQ PC+0x02
	RJMP _DRV_SD_OP_INIT__END
	LDI TEMP_H,0x00
	LDI TEMP_L,0x00
	LDI TEMP,0x32
	MCALL C5_WAIT_2MS
	RJMP _DRV_SD_OP_INIT__WAIT

_DRV_SD_OP_INIT_SD_READY:
	CPI FLAGS,DRV_SD_FLAG_VER1
	BREQ _DRV_SD_OP_INIT__END

	CBI PORTB,SS & 0x0f
	LDI TEMP,_DRV_SD_CMD58
	STD Z+0x00,TEMP
	LDI TEMP,0x00
	STD Z+0x01,TEMP
	LDI TEMP,0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x00
	STD Z+0x03,TEMP
	LDI TEMP,0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_CMD
	MOV YH,ZH
	MOV YL,ZL
	MCALL _DRV_SD_GET_R3R7
	SBI PORTB,SS & 0x0f
.ifdef LOGGING_PORT
	MCALL _DRV_SD_LOG_OCR
.endif
	LD TEMP,Z
	SBRC TEMP,0x01
	LDI FLAGS,DRV_SD_FLAG_VER2SC
	SBRS TEMP,0x01
	LDI FLAGS,DRV_SD_FLAG_VER2HC

_DRV_SD_OP_INIT__END:
	SBI PORTB,SS & 0x0f
.ifdef LOGGING_PORT
	MCALL C5_LOG_CR
	LDI_Y _DRV_SD_LOG_STR_SD_CARD_VERSIONS|0x8000
	MOV TEMP,FLAGS
	DEC TEMP
	ANDI TEMP,0x03
	MCALL C5_LOG_STR_EL

	LDI_Y _DRV_SD_LOG_INIT_DONE|0x8000
	MCALL C5_LOG_STR
	MOV TEMP,ACCUM
	MCALL C5_LOG_BYTE
	MCALL C5_LOG_CR
.endif



	POP_Z
	POP LOOP_CNTR
	POP TEMP
	POP FLAGS
	RET

;--------------------------------------------------------
_DRV_SD_OP_GET_OCR:
;--------------------------------------------------------
;Получить OCR
;IN: Z-адрес на выделенную память
;OUT: ACCUM-R1 ответ
;Y-адрес на буффер драйвера (где будет записан OCR)
;--------------------------------------------------------
	PUSH TEMP
	PUSH TEMP_L
	PUSH_Z

	CBI PORTB,SS & 0x0f
	LDI TEMP,_DRV_SD_CMD58
	STD Z+0x00,TEMP
	LDI TEMP,0x00
	STD Z+0x01,TEMP
	LDI TEMP,0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x00
	STD Z+0x03,TEMP
	LDI TEMP,0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_CMD
	MOV YH,ZH
	MOV YL,ZL
	MCALL _DRV_SD_GET_R3R7
	SBI PORTB,SS & 0x0f
.ifdef LOGGING_PORT
	MCALL _DRV_SD_LOG_OCR
.endif
	MOV YH,ZH
	MOV YL,ZL
_DRV_SD_OP_GET_OCR__END:

	POP_Z
	POP TEMP_L
	POP TEMP
	RET



;--------------------------------------------------------
_DRV_SD_OP_GET_CSD:
;--------------------------------------------------------
;Получить CSD
;IN: Z-адрес на выделенную память
;OUT: ACCUM-R1 ответ
;Y-адрес на буффер драйвера (где будет записан CSD)
;--------------------------------------------------------
	PUSH TEMP
	PUSH TEMP_L
	PUSH_Z

	CBI PORTB,SS & 0x0f
	LDI TEMP,_DRV_SD_CMD9
	STD Z+0x00,TEMP
	LDI TEMP,0x00
	STD Z+0x01,TEMP
	LDI TEMP,0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x00
	STD Z+0x03,TEMP
	LDI TEMP,0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_CMD
	MCALL _DRV_SD_GET_R1
	CPI ACCUM,0x00
	BRNE _DRV_SD_OP_GET_CSD__FAIL
	MOV YH,ZH
	MOV YL,ZL
	LDI TEMP_H,0x00
	LDI TEMP_L,0x10
	MCALL _DRV_SD_GET_BLOCK
	SBI PORTB,SS & 0x0f
.ifdef LOGGING_PORT
	MCALL _DRV_SD_LOG_CSD
.endif
	MOV YH,ZH
	MOV YL,ZL
_DRV_SD_OP_GET_CSD__FAIL:
_DRV_SD_OP_GET_CSD__END:
SBI PORTB,SS & 0x0f

	POP_Z
	POP TEMP_L
	POP TEMP
	RET

;--------------------------------------------------------
_DRV_SD_OP_GET_CID:
;--------------------------------------------------------
;Получить CID
;IN: Z-адрес на выделенную память
;OUT: ACCUM-R1 ответ
;Y-адрес на буффер драйвера (где будет записан CID)
;--------------------------------------------------------
	PUSH TEMP
	PUSH TEMP_L
	PUSH_Z

	CBI PORTB,SS & 0x0f
	LDI TEMP,_DRV_SD_CMD10
	STD Z+0x00,TEMP
	LDI TEMP,0x00
	STD Z+0x01,TEMP
	LDI TEMP,0x00
	STD Z+0x02,TEMP
	LDI TEMP,0x00
	STD Z+0x03,TEMP
	LDI TEMP,0x00
	STD Z+0x04,TEMP
	LDI TEMP_L,0x05
	MCALL _DRV_SD__SEND_CMD
	MCALL _DRV_SD_GET_R1
	CPI ACCUM,0x00
	BRNE _DRV_SD_OP_GET_CID__FAIL
	MOV YH,ZH
	MOV YL,ZL
	LDI TEMP_H,0x00
	LDI TEMP_L,0x10
	MCALL _DRV_SD_GET_BLOCK
	SBI PORTB,SS & 0x0f
.ifdef LOGGING_PORT
	MCALL _DRV_SD_LOG_CID
.endif
	MOV YH,ZH
	MOV YL,ZL
_DRV_SD_OP_GET_CID__FAIL:
_DRV_SD_OP_GET_CID__END:
SBI PORTB,SS & 0x0f

	POP_Z
	POP TEMP_L
	POP TEMP
	RET




;--------------------------------------------------------
_DRV_SD__SEND_ACMD:
;--------------------------------------------------------
;Отправка команды
;IN: Z-адрес на команду, TEMP_L-длина команды (без CRC)
;OUT: ACCUM-R1 ответ
;--------------------------------------------------------
	PUSH TEMP_L
	PUSH_Z

	LDI ACCUM,0x10
	MCALL C5_RAM_EXTEND

	LDI TEMP,_DRV_SD_CMD55
	STD Y+0x00,TEMP
	LDI TEMP,0x00
	STD Y+0x01,TEMP
	LDI TEMP,0x00
	STD Y+0x02,TEMP
	LDI TEMP,0x00
	STD Y+0x03,TEMP
	LDI TEMP,0x00
	STD Y+0x04,TEMP
	LDI TEMP_L,0x05
	MOV ZH,YH
	MOV ZL,YL
	MCALL _DRV_SD__SEND_CMD
	MCALL _DRV_SD_GET_R1
	PUSH ACCUM
	LDI ACCUM,0x10
	MCALL C5_RAM_REDUCE
	POP ACCUM
	POP_Z
	POP TEMP_L

	ANDI ACCUM,0xfe
	CPI ACCUM,0x00
	BREQ _DRV_SD__SEND_CMD
	RET

;--------------------------------------------------------
_DRV_SD__SEND_CMD:
;--------------------------------------------------------
;Отправка команды
;IN: Z-адрес на команду, TEMP_L-длина команды (без CRC)
;--------------------------------------------------------
	PUSH_Z
	PUSH LOOP_CNTR
	PUSH ACCUM
	PUSH TEMP
	PUSH TEMP_L


	LD TEMP,Z
	ORI TEMP,0x40
	ST Z,TEMP

	PUSH_X
	MOV XH,ZH
	MOV XL,ZL
	LDI_Y CRC7_730
	MOV LOOP_CNTR,TEMP_L
	MCALL CRC_BLOCK_X8
	ADD XL,TEMP_L
	CLR LOOP_CNTR
	ADC XH,LOOP_CNTR
	ORI ACCUM,0x01
	ST X,ACCUM
	INC TEMP_L
	POP_X

.ifdef LOGGING_PORT
	PUSH_Y
	LDI TEMP,'>'
	MCALL C5_LOG_CHAR
	MOV TEMP,TEMP_L
	MOV YH,ZH
	MOV YL,ZL
	MCALL C5_LOG_BYTES
	MCALL C5_LOG_CR
	POP_Y
.endif

	CBI PORTB,MOSI & 0x0f
	LDI TEMP,0xff
	MCALL _DRV_SD_BYTE_SEND

	MOV LOOP_CNTR,TEMP_L
_DRV_SD__SEND_CMD__LOOP:
	LD TEMP,Z+
	MCALL _DRV_SD_BYTE_SEND
	DEC LOOP_CNTR
	BRNE _DRV_SD__SEND_CMD__LOOP
	LDI TEMP,0xff
	MCALL _DRV_SD_BYTE_SEND

	POP TEMP_L
	POP TEMP
	POP ACCUM
	POP LOOP_CNTR
	POP_Z
	RET



;--------------------------------------------------------
_DRV_SD_GET_R1:
;--------------------------------------------------------
;Прием R1
;OUT: ACCUM
;--------------------------------------------------------
	PUSH TRY_CNTR
	PUSH TEMP

	LDI TRY_CNTR,0x10
_DRV_SD_GET_R1__LOOP:
	MCALL _DRV_SD_BYTE_RECV
	SBRS TEMP,0x07
	RJMP _DRV_SD_GET_R1__DONE
	DEC TRY_CNTR
	BRNE _DRV_SD_GET_R1__LOOP
_DRV_SD_GET_R1__DONE:
	MOV ACCUM,TEMP

.ifdef LOGGING_PORT
	PUSH_Y
	LDI_Y _DRV_SD_LOG_STR_R1|0x8000
	MCALL C5_LOG_STR
	MOV TEMP,ACCUM
	MCALL C5_LOG_BYTE
	MCALL C5_LOG_CR
	POP_Y
.endif

	POP TEMP
	POP TRY_CNTR
	RET

;--------------------------------------------------------
_DRV_SD_GET_R3R7:
;--------------------------------------------------------
;Прием R7
;IN: Y-адрес на буфер
;OUT: ACCUM
;--------------------------------------------------------
	PUSH TRY_CNTR
	PUSH TEMP

	LDI TRY_CNTR,0x10
_DRV_SD_GET_R7__LOOP:
	MCALL _DRV_SD_BYTE_RECV
	SBRS TEMP,0x07
	RJMP _DRV_SD_GET_R7__GOT_R1
	DEC TRY_CNTR
	BRNE _DRV_SD_GET_R7__LOOP
_DRV_SD_GET_R7__GOT_R1:
	MOV ACCUM,TEMP

	LDI TEMP,0x04
	MCALL _DRV_SD_BYTES_RECV
.ifdef LOGGING_PORT
	PUSH_Y
	LDI_Y _DRV_SD_LOG_STR_R3R7|0x8000
	MCALL C5_LOG_STR
	POP_Y
	MOV TEMP,ACCUM
	MCALL C5_LOG_BYTE
	LDI TEMP,0x04
	MCALL C5_LOG_BYTES
	MCALL C5_LOG_CR
.endif

	POP TEMP
	POP TRY_CNTR
	RET

;--------------------------------------------------------
_DRV_SD_GET_BLOCK:
;--------------------------------------------------------
;Прием блока данных
;IN: Y-адрес на выделенную память
;TEMP_H,L-максимальная длина данных
;OUT: TEMP_H,L-длина полученных данных
;--------------------------------------------------------
	PUSH TRY_CNTR
	PUSH TEMP
	PUSH_Y

	MOV XH,TEMP_H
	MOV XL,TEMP_L
	LDI TRY_CNTR,0x10
_DRV_SD_GET_BLOCK__BEGIN_LOOP:
	MCALL _DRV_SD_BYTE_RECV
	CPI TEMP,0xfe
	BREQ _DRV_SD_GET_BLOCK__DATA
	DEC TRY_CNTR
	BRNE _DRV_SD_GET_BLOCK__BEGIN_LOOP
	RJMP _DRV_SD_GET_BLOCK__FAIL

_DRV_SD_GET_BLOCK__DATA:
	MCALL _DRV_SD_BYTE_RECV
	CPI TEMP,0xfd
	BREQ _DRV_SD_GET_BLOCK__DONE
	ST Y+,TEMP
	SUBI XL,0x01
	SBCI XH,0x00
	BREQ _DRV_SD_GET_BLOCK__DONE
	RJMP _DRV_SD_GET_BLOCK__DATA
_DRV_SD_GET_BLOCK__DONE:
	SUB TEMP_L,XL
	SBC TEMP_H,XH
.ifdef LOGGING_PORT
	LDI_Y _DRV_SD_LOG_STR_BLOCK|0x8000
	MCALL C5_LOG_STR
	POP_Y
	PUSH_Y
	MOV TEMP,TEMP_L
	MCALL C5_LOG_BYTES
	MCALL C5_LOG_CR
.endif


	RJMP _DRV_SD_GET_BLOCK__END
_DRV_SD_GET_BLOCK__FAIL:
	LDI TEMP_H,0x00
	LDI TEMP_L,0x00
_DRV_SD_GET_BLOCK__END:

	POP_Y
	POP TEMP
	POP TRY_CNTR
	RET

;--------------------------------------------------------
_DRV_SD_BYTE_SEND:
;--------------------------------------------------------
;Передача байта
;IN: TEMP-значение
;--------------------------------------------------------
	PUSH LOOP_CNTR
	PUSH TEMP

	LDI LOOP_CNTR,0x08
_DRV_SD_BYTE_SEND__LOOP:
	SBRS TEMP,0x07
	CBI PORTB,MOSI & 0x0f
	SBRC TEMP,0x07
	SBI PORTB,MOSI & 0x0f
	LSL TEMP
	MCALL _DRV_SD_WAIT
	SBI PORTB,SCK & 0x0f
	MCALL _DRV_SD_WAIT
	CBI PORTB,SCK & 0x0f
	DEC LOOP_CNTR
	BRNE _DRV_SD_BYTE_SEND__LOOP

	CBI PORTB,SCK & 0x0f
	MCALL _DRV_SD_WAIT

	POP TEMP
	POP LOOP_CNTR
	RET


;--------------------------------------------------------
_DRV_SD_BYTE_RECV:
;--------------------------------------------------------
;Прием байта
;OUT: TEMP-значение
;--------------------------------------------------------
	PUSH LOOP_CNTR

	LDI LOOP_CNTR,0x08
_DRV_SD_BYTE_RECV__LOOP:
	LSL TEMP
	SBIC PINB,MISO & 0x0f
	ORI TEMP,0x01
	SBI PORTB,SCK & 0x0f
	MCALL _DRV_SD_WAIT
	CBI PORTB,SCK & 0x0f
	MCALL _DRV_SD_WAIT
	DEC LOOP_CNTR
	BRNE _DRV_SD_BYTE_RECV__LOOP

	POP LOOP_CNTR
	RET

;--------------------------------------------------------
_DRV_SD_BYTES_RECV:
;--------------------------------------------------------
;Прием данных
;IN: Y-адрес на выделенную память
;TEMP-длина данных
;--------------------------------------------------------
	PUSH TEMP
	PUSH LOOP_CNTR
	PUSH_Y

	MOV LOOP_CNTR,TEMP
_DRV_SD_BYTES_RECV__LOOP:
	MCALL _DRV_SD_BYTE_RECV
	ST Y+,TEMP
	DEC LOOP_CNTR
	BRNE _DRV_SD_BYTES_RECV__LOOP

	POP_Y
	POP LOOP_CNTR
	POP TEMP
	RET

;--------------------------------------------------------
_DRV_SD_LOG_CID:
;Логирование CID
;IN: Z-адрес на блок данных
;--------------------------------------------------------
.ifdef LOGGING_PORT
	PUSH_Z
	PUSH_Y
	PUSH TEMP
	PUSH TEMP_H
	PUSH TEMP_L

	LDI_Y _DRV_SD_LOG_STR_CID|0x8000
	MCALL C5_LOG_STR
	LDI_Y _DRV_SD_LOG_STR_CID_FIELDS|0x8000
	LDI TEMP,0x00
	MCALL C5_LOG_STR_EL
	LDD TEMP,Z+0x00
	MCALL C5_LOG_BYTE
	MCALL C5_LOG_CR

	LDI TEMP,0x01
	MCALL C5_LOG_STR_EL
	LDD TEMP,Z+0x01
	MCALL C5_LOG_CHAR
	LDD TEMP,Z+0x02
	MCALL C5_LOG_CHAR
	MCALL C5_LOG_CR

	LDI TEMP,0x02
	MCALL C5_LOG_STR_EL
	LDI YL,0x03
	LDI YH,0x00
	ADD YL,ZL
	ADC YH,ZH
	LDI TEMP,0x05
	MCALL C5_LOG_STRN
	MCALL C5_LOG_CR

	LDI_Y _DRV_SD_LOG_STR_CID_FIELDS|0x8000
	LDI TEMP,0x03
	MCALL C5_LOG_STR_EL
	LDD TEMP,Z+0x08
	MCALL C5_LOG_BYTE
	MCALL C5_LOG_CR

	LDI TEMP,0x04
	MCALL C5_LOG_STR_EL
	LDI YL,0x09
	LDI YH,0x00
	ADD YL,ZL
	ADC YH,ZH
	LDI TEMP,0x04
	MCALL C5_LOG_BYTES
	MCALL C5_LOG_CR

	LDI_Y _DRV_SD_LOG_STR_CID_FIELDS|0x8000
	LDI TEMP,0x04
	MCALL C5_LOG_STR_EL
	LDD TEMP_H,Z+0x0d
	LDD TEMP_L,Z+0x0e
	SWAP TEMP_H
	ANDI TEMP_H,0xf0
	MOV TEMP,TEMP_L
	SWAP TEMP
	ANDI TEMP,0x0f
	OR TEMP_H,TEMP
	ANDI TEMP_L,0x0f
	MCALL C5_LOG_NUMx8
	LDI TEMP,'.'
	MCALL C5_LOG_CHAR
	MOV TEMP,TEMP_H
	LDI TEMP_H,high(2000)
	LDI TEMP_L,low(2000)
	ADD TEMP_L,TEMP
	CLR TEMP
	ADC TEMP_H,TEMP
	MCALL C5_LOG_NUMX16
	MCALL C5_LOG_CR

	POP TEMP_L
	POP TEMP_H
	POP TEMP
	POP_Y
	POP_Z
.endif
	RET


;--------------------------------------------------------
_DRV_SD_LOG_OCR:
;Логирование OCR
;IN: Z-адрес на блок данных
;--------------------------------------------------------
.ifdef LOGGING_PORT
	PUSH_Z
	PUSH_Y
	PUSH TEMP
	PUSH ACCUM

	LDI_Y _DRV_SD_LOG_STR_OCR|0x8000
	MCALL C5_LOG_STR

	LDD TEMP,Z+0x02
	SBRS TEMP,0x07
	RJMP PC+0x05
	LDI_Y _DRV_SD_LOG_STR_OCR_VOLTAGES|0x8000
	LDI TEMP,0x00
	MCALL C5_LOG_STR_EL

	LDD ACCUM,Z+0x01
	LDI TEMP,0x01
_DRV_SD_LOG_OCR__VOLTAGES_LOOP:
	LSR ACCUM
	BRCC PC+0x03
	MCALL C5_LOG_STR_EL
	INC TEMP
	CPI TEMP,0x09
	BRNE _DRV_SD_LOG_OCR__VOLTAGES_LOOP

	LDD TEMP,Z+0x00
	SBRS TEMP,0x07
	BRCC PC+0x05
	LDI_Y _DRV_SD_LOG_STR_OCR_24|0x8000
	MCALL C5_LOG_STR
	SBRS TEMP,0x04
	BRCC PC+0x05
	LDI_Y _DRV_SD_LOG_STR_OCR_27|0x8000
	MCALL C5_LOG_STR
	SBRS TEMP,0x02
	BRCC PC+0x05
	LDI_Y _DRV_SD_LOG_STR_OCR_29|0x8000
	MCALL C5_LOG_STR
	SBRS TEMP,0x01
	BRCC PC+0x05
	LDI_Y _DRV_SD_LOG_STR_OCR_30|0x8000
	MCALL C5_LOG_STR
	SBRS TEMP,0x00
	BRCC PC+0x05
	LDI_Y _DRV_SD_LOG_STR_OCR_31|0x8000
	MCALL C5_LOG_STR

	POP ACCUM
	POP TEMP
	POP_Y
	POP_Z
.endif
	RET



;--------------------------------------------------------
_DRV_SD_LOG_CSD:
;Логирование CSD
;IN: Z-адрес на блок данных
;--------------------------------------------------------
.ifdef LOGGING_PORT
	PUSH_Y
	PUSH TEMP
	PUSH TEMP_L

	LDI_Y _DRV_SD_LOG_STR_CSD|0x8000
	MCALL C5_LOG_STR

	LDD TEMP_L,Z+0x00
	LDI_Y _DRV_SD_LOG_STR_CSD_STRUCTURE|0x8000
	MCALL C5_LOG_STR
	MOV TEMP,TEMP_L
	SWAP TEMP
	LSR TEMP
	LSR TEMP
	MCALL C5_LOG_BYTE
	MCALL C5_LOG_CR

	LDD TEMP_L,Z+0x01
	LDI_Y _DRV_SD_LOG_STR_CSD_TAAC|0x8000
	MCALL C5_LOG_STR
	MOV TEMP,TEMP_L
	LSL TEMP
	SWAP TEMP
	MCALL C5_LOG_NUMX8
	LDI TEMP,'x'
	ANDI TEMP_L,0x07
	CPI TEMP_L,0x00
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_1NS
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x01
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_10NS
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x02
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_100NS
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x03
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_1US
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x04
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_10US
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x05
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_100US
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x06
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_1MS
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	CPI TEMP_L,0x07
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_10MS
	RJMP _DRV_SD_LOG_CSD__TAAC_L1
	LDI_Y _DRV_SD_LOG_STR_RESERVED
_DRV_SD_LOG_CSD__TAAC_L1:
	MCALL C5_LOG_STR
	MCALL C5_LOG_CR

	LDD TEMP,Z+0x02
	LDI_Y _DRV_SD_LOG_STR_CSD_NSAC|0x8000
	MCALL C5_LOG_STR
	MCALL C5_LOG_NUMX8
	MCALL C5_LOG_CR

	LDD TEMP_L,Z+0x03
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED|0x8000
	MCALL C5_LOG_STR
	MOV TEMP,TEMP_L
	LSR TEMP
	LSR TEMP
	ANDI TEMP,0x0f
	CPI TEMP,0x01
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_1
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x02
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_2
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x03
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_3
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x04
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_4
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x05
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_5
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x06
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_6
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x07
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_7
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x08
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_8
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x09
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_9
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x0a
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_A
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x0b
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_B
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x0c
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_C
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x0d
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_D
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x0e
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_E
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	CPI TEMP,0x0f
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_VALUE_F
	RJMP _DRV_SD_LOG_CSD__TRAN_L1
	LDI_Y _DRV_SD_LOG_STR_RESERVED
_DRV_SD_LOG_CSD__TRAN_L1:
	MCALL C5_LOG_STR
	LDI TEMP,'x'
	MCALL C5_LOG_CHAR
	ANDI TEMP_L,0x03
	CPI TEMP,0x00
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_RATE_0
	RJMP _DRV_SD_LOG_CSD__TRAN_L2
	CPI TEMP,0x01
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_RATE_1
	RJMP _DRV_SD_LOG_CSD__TRAN_L2
	CPI TEMP,0x02
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_RATE_2
	RJMP _DRV_SD_LOG_CSD__TRAN_L2
	CPI TEMP,0x03
	BRNE PC+0x04
	LDI_Y _DRV_SD_LOG_STR_CSD_TRAN_SPEED_RATE_3
	RJMP _DRV_SD_LOG_CSD__TRAN_L2
	LDI_Y _DRV_SD_LOG_STR_RESERVED
_DRV_SD_LOG_CSD__TRAN_L2:
	MCALL C5_LOG_STR
	MCALL C5_LOG_CR

	;TODO

	POP TEMP_L
	POP TEMP
	POP_Y
.endif
	RET




;--------------------------------------------------------
_DRV_SD_WAIT:
;--------------------------------------------------------
;Выдерживаем паузу
;--------------------------------------------------------
	RET
