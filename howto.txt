Управление драйверами и задачами:
	CORE5277_CREATE - создает процесс(драйвер или задача)
	Параметры: PID - ид процесса, Z - адрес процедуры инициализации процесса, остальные парамеры описываются в процессе
	CORE5277_READY - завершение инициализации процесса(вызывается процессом по завершению инициализации)

	CORE5277_EXEC - запуск процедуры драйвера
	Параметры: TEMP - ид драйвера, остальные парамеры описываются в драйвере

	CORE5277_SUSPEND - передача управления следующей задаче

Паузы:
	CORE5277_WAIT_2MS - выдерживаем паузу кратную 2ms. В режиме REALTIME=1 управление будет передано следующей задаче
	Параметры: TEMP_H/TEMP_L/TEMP - время ожидания(x2ms)

	CORE5277_WAIT_500NS - выдерживаем паузу кратную 0.5ms. Во время паузы управление другой задаче не передается
	Параметры: TEMP - время ожидания(x0.5ms)

Прерывания:
	CORE5277_IR_VECTOR_SET - устанавливаем точку входа для прерывания
	Параметры: PID - ид процесса, ACCUM - ид прерывания, TEMP_H/TEMP_L - адрес обработчика(0 - не обрабатывать)

Другое:
	CORE5277_DISPATCHER_LOCK/CORE5277_DISPATCHER_UNLOCK - блокирует/разрешает переключение задач диспетчером(для режима REALTIME=1)
	CORE5277_TCNT_GET - Получаем значение счетчика аппаратного таймера, на котором работает ядро

Доступные регистры(r16-r31):
	TEMP_L		;Общего назначения
	TEMP_H		;Общего назначения
	TEMP			;Общего назначения
	TEMP_EL		;Общего назначения
	TEMP_EH		;Общего назначения
	LOOP_CNTR	;Для циклов
	FLAGS			;Для флагов
	TRY_CNTR		;Для подсчета ошибок
	ACCUM			;Общего назначения
	PID			;Хранит ид текущего процесса, также используется в некоторых процедурах как параметр
	XL				;16биные пары, для адресации
	XH				;16биные пары, для адресации
	YL				;16биные пары, для адресации
	YH				;16биные пары, для адресации
	ZL				;16биные пары, для адресации
	ZH				;16биные пары, для адресации
	Также для драйвера может быть полезен _PID - хранит ид родительской задачи(нельзя изменять).
	*регистры r0-r15 отведены ядру и не могут быть использованы в процессах.

Кроме этого есть дополнительные процедуры описанные в директории ./inc/core

Каталоги диретории ./inc
	conv - процедуры для конвертирования данных в различные форматы
	core - дополнительные процедуры ядра
	devices - описание поддерживаемых микроконтроллером(подлючаются к проекту в первую очередь)
	drivers - драйвера различных устройств и шин
	io - процедуры для работы с ввыод/выводом, например работа с портами и логирование
	math - процедуры математики(умножение, деление и т.п.)
	mem - процедуры работы с памятью, как управление(выделение, освобождение) так и вспомогательные(заполнение, копирование и т.п.)


Подключение процедур(.include)
	При необходимости использования процедуры из директории .inc, необходимо ее подгрузить в виде .include	"./inc/mem/ram_copy8.inc"
	Часть процедур загружается непосредтсвенно ядром. Во всех процедурах предусмотрена проверка на дублирование.
	Таким образом прошивка состоит только из востребованных процедур.

Опции ядра:
	Основное описание микроконтроллера храниться в файлах директории ./inc/devices
	Необходимо подгружать соответствующий микроконтроллеру файл в начале проекта.
	Следом можно объявить опции:
	.SET	REALTIME									= 1 - использовать паралельное выполнение(REALTIME=1) или использовать режим простого переключения(REALTIME=0)
	.SET	TIMERS									= 1 - количество программных таймеров(значение 0-4)
	.SET	BUFFER_SIZE								= 0x00 - размер глобального буфера
	.SET	LOGGING_PORT							= PC0 - выполнять логирование в порт(для отключения логирвания следует закомментировать опцию)
	После чего подгружвется ядро
	.INCLUDE "core5277.asm"


Основные параметры ядра:
Период работы таймера - 0.0000005s
Период отсчета времени - 0.002s
Период тика ядра - 0.002s
Минималный период программных таймеров - 0.002s
Требуемая частота микроконтроллера - 16MHz
Минимальный размер RAM - 256B
Минимальный размер ROM - 4096B
Используемые прерывания - RESET,TIMER0_CPA,TIMER0_CPB(на некоторых МК TIMER1_CPA,TIMER1_CPB)
Максимальне количество процедур - зависит от МК, и описано в его заголовочном файле

Не рекомендуется использовать в задачах работу с перываниями или программными таймерами.
Все использование таймеров и прерываний должно распологаться в процедурах драйверов.
Драйвер может взаимодействовать напрямую с прерываниями и аппаратными узлами МК, однако рекомендуется использовать функционал ядра и созданные драйвера.
Обработчики прерываний должны быть максимально короткими
Порты микроконтроллеров унифицированы(также как и многие регистры), следует использовать определения типа PA0,PC7 и т.п.
Процедуры для управления портами находятся в ./inc/io
Драйверы условно можно разделить на два типа - программные и аппаратные. Разработчик сам выбирает что использовать при создании процессов.


Процедуры ./inc/core/
	Таймеры:
		CORE5277_TIMER_SET - Задаем программный таймер
		Параметры: TEMP - ид таймера(1-4), TEMP_H/TEMP_L - адрес обработчика, ACCUM - период (7-бит:H-0.002s,L-0.00005s)
		CORE5277_TIMER_SET_PERIOD - Переназначаем период программному таймеру
		Параметры: TEMP - ид таймера(1-4), ACCUM - период (7-бит:H-0.002s,L-0.00005s)
		CORE5277_TIMER_START - Запускаем программный таймер
		Параметры: PID - ид процесса, TEMP - ид таймера(1-4)
		CORE5277_TIMER_STOP - Останавливаем таймер
		Параметры: TEMP - ид таймера(1-4)
